'use strict';

const uuid = require('uuid');

module.exports = {
  async up(queryInterface, Sequelize) {
    await module.exports.down(queryInterface, Sequelize);

    return queryInterface.bulkInsert('areas', [
      {
        id: uuid(),
        name: 'Los Angeles, California, United States',
        shortName: 'Los Angeles',
        timezone: 'America/Los_Angeles',
        polygon: Sequelize.fn('ST_GeomFromText', 'POLYGON((-117.6687 34.8204, -117.6468 34.2892, -117.7289 34.0208, -117.7673 34.0263, -117.8056 33.9770, -117.7837 33.9441, -117.9754 33.9441, -117.9754 33.9003, -118.0575 33.8455, -118.1178 33.7415, -118.1835 33.7634, -118.1835 33.7196, -118.2602 33.7031, -118.4135 33.7415, -118.4300 33.7743, -118.3916 33.8401, -118.4628 33.9715, -118.5450 34.0372, -118.7476 34.0318, -118.8024 33.9989, -118.9448 34.0427, -118.9393 34.0756, -118.7860 34.1687, -118.6655 34.1687, -118.6655 34.2399, -118.6326 34.2399, -118.8846 34.7931, -118.8955 34.8204, -117.6687 34.8204))'),
        center: Sequelize.fn('ST_GeomFromText', 'POINT(-118.2436 34.0522)'),
        phone: '+14157993599',
        countryCode: '1',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: uuid(),
        name: 'Taipei, Taiwan',
        shortName: 'Taipei',
        timezone: 'Asia/Taipei',
        polygon: Sequelize.fn('ST_GeomFromText', 'POLYGON((121.5108 25.0977, 121.5074 25.0957, 121.5010 25.0961, 121.4964 25.0929, 121.5048 25.0854, 121.5081 25.0753, 121.5069 25.0551, 121.5026 25.0470, 121.4878 25.0420, 121.4826 25.0350, 121.4873 25.0302, 121.4900 25.0230, 121.4897 25.0153, 121.4948 25.0106, 121.5032 25.0159, 121.5094 25.0215, 121.5165 25.0215, 121.5242 25.0129, 121.5316 25.0081, 121.5335 25.0044, 121.5305 25.0003, 121.5329 24.9932, 121.5553 24.9960, 121.5757 24.9952, 121.5865 25.0017, 121.5824 25.0153, 121.5762 25.0296, 121.5940 25.0364, 121.5959 25.0471, 121.5977 25.0506, 121.6068 25.0517, 121.6205 25.0540, 121.6222 25.0585, 121.6171 25.0630, 121.6133 25.0658, 121.6184 25.0744, 121.6157 25.0803, 121.5968 25.0852, 121.5874 25.0907, 121.5867 25.0985, 121.5795 25.1034, 121.5582 25.1025, 121.5465 25.1098, 121.5441 25.1188, 121.5262 25.1210, 121.5101 25.1188, 121.5060 25.1132, 121.5108 25.0977))'),
        center: Sequelize.fn('ST_GeomFromText', 'POINT(121.5654 25.0330)'),
        phone: '+14157993599',
        countryCode: '886',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: uuid(),
        name: 'Berlin, Germany',
        shortName: 'Berlin',
        timezone: 'Europe/Berlin',
        polygon: Sequelize.fn('ST_GeomFromText', 'POLYGON((13.4787 52.6734, 13.4852 52.6591, 13.5127 52.6455, 13.5176 52.6296, 13.4985 52.6106, 13.5081 52.5921, 13.5471 52.5878, 13.5815 52.5708, 13.5853 52.5484, 13.6188 52.5429, 13.6333 52.5118, 13.6150 52.4808, 13.6669 52.4741, 13.7164 52.4621, 13.7291 52.4505, 13.7532 52.4475, 13.7164 52.3995, 13.6897 52.3833, 13.6484 52.3382, 13.6379 52.3438, 13.6459 52.3652, 13.6279 52.3817, 13.6069 52.3749, 13.5927 52.3941, 13.5356 52.3890, 13.5151 52.4014, 13.4798 52.3959, 13.4623 52.4206, 13.4187 52.4099, 13.4275 52.3868, 13.4209 52.3762, 13.3885 52.3779, 13.3872 52.3885, 13.3430 52.4076, 13.3119 52.3995, 13.2961 52.4164, 13.2750 52.4052, 13.2498 52.4049, 13.2457 52.4208, 13.1955 52.4150, 13.1248 52.3968, 13.0906 52.4118, 13.1231 52.4393, 13.1092 52.4506, 13.1175 52.4740, 13.1664 52.5101, 13.1430 52.5196, 13.1173 52.5169, 13.1306 52.5563, 13.1529 52.5727, 13.1489 52.5914, 13.1642 52.5989, 13.1921 52.5899, 13.2206 52.6281, 13.2642 52.6269, 13.2824 52.6412, 13.3083 52.6296, 13.3590 52.6235, 13.3935 52.6461, 13.4337 52.6379, 13.4508 52.6627, 13.4787 52.6734))'),
        center: Sequelize.fn('ST_GeomFromText', 'POINT(13.404954 52.52)'),
        phone: '+14157993599',
        countryCode: '49',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: uuid(),
        name: 'Tel Aviv-Yafo, Gush Dan, Israel',
        shortName: 'Tel Aviv',
        timezone: 'Asia/Jerusalem',
        polygon: Sequelize.fn('ST_GeomFromText', 'POLYGON((34.7329194 32.003664, 34.7424399 32.0331439, 34.7390737 32.0424201, 34.7464009 32.0497079, 34.7498806 32.056689, 34.7560056 32.0588536, 34.7690819 32.0964566, 34.7676643 32.0983192, 34.7721739 32.1092915, 34.7767846 32.1114356, 34.79187 32.1544839, 34.7890493 32.1595965, 34.7911106 32.1659946, 34.7952692 32.1676476, 34.7989216 32.1768305, 34.8047799 32.1971826, 34.8112592 32.1984411, 34.8239015 32.1930935, 34.836929 32.1914252, 34.8479143 32.1812201, 34.8569844 32.1777622, 34.8569855 32.1726949, 34.8643974 32.17102, 34.8604079 32.1535917, 34.8550028 32.1484203, 34.8550409 32.1442821, 34.8599945 32.1364823, 34.8671917 32.1198543, 34.862203 32.1137073, 34.8507399 32.1133959, 34.8458341 32.0942574, 34.8458254 32.0853015, 34.8435246 32.0735899, 34.8450783 32.0655246, 34.8603081 32.0682409, 34.8677073 32.0710479, 34.8657727 32.0464707, 34.8688081 32.0332727, 34.8760055 32.0215076, 34.8608805 32.0197606, 34.8492516 32.0224422, 34.8473259 32.0196274, 34.827379 32.026806, 34.8119285 32.0069335, 34.8073162 31.9942738, 34.7997728 31.9958917, 34.796494 31.9886868, 34.7794486 31.9909358, 34.7649942 31.9967124, 34.7581435 31.9926877, 34.7448386 31.9974965, 34.7329194 32.003664))'),
        center: Sequelize.fn('ST_GeomFromText', 'POINT(34.7818 32.0853)'),
        phone: '+14157993599',
        countryCode: '972',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
    ]);
  },

  async down(queryInterface) {
    try {
      await queryInterface.describeTable('areas');
    }
    catch (e) {
      //First time migration
      return;
    }

    return queryInterface.bulkDelete('areas', null);
  },
};
